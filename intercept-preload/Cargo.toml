# SPDX-License-Identifier: GPL-3.0-or-later

[package]
name = "intercept-preload"
description = "Dynamic library to be used with Bear for LD_PRELOAD interception"
version.workspace = true
authors.workspace = true
repository.workspace = true
homepage.workspace = true
license.workspace = true
edition.workspace = true

[lib]
name = "exec"
path = "src/lib.rs"
crate-type = ["rlib", "cdylib"]

[dependencies]
bear = { path = "../bear" }
thiserror.workspace = true
log.workspace = true
env_logger.workspace = true
ctor = { version = "0.4" }

[target.'cfg(target_os = "linux")'.dependencies]
libc.workspace = true

[build-dependencies]
platform-checks = { path = "../platform-checks" }

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(has_header_dlfcn_h)',
    'cfg(has_symbol_dlopen)',
    'cfg(has_symbol_dlsym)',
    'cfg(has_symbol_dlerror)',
    'cfg(has_symbol_dlclose)',
    'cfg(has_symbol_RTLD_NEXT)',
    'cfg(has_header_errno_h)',
    'cfg(has_symbol_EACCES)',
    'cfg(has_symbol_ENOENT)',
    'cfg(has_header_unistd_h)',
    'cfg(has_symbol_execve)',
    'cfg(has_symbol_execv)',
    'cfg(has_symbol_execvpe)',
    'cfg(has_symbol_execvp)',
    'cfg(has_symbol_execvP)',
    'cfg(has_symbol_exect)',
    'cfg(has_symbol_execl)',
    'cfg(has_symbol_execlp)',
    'cfg(has_symbol_execle)',
    'cfg(has_symbol_execveat)',
    'cfg(has_symbol_fexecve)',
    'cfg(has_header_spawn_h)',
    'cfg(has_symbol_posix_spawn)',
    'cfg(has_symbol_posix_spawnp)',
    'cfg(has_header_stdio_h)',
    'cfg(has_symbol_popen)',
    'cfg(has_header_stdlib_h)',
    'cfg(has_symbol_system)'
] }
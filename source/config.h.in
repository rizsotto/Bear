/*  Copyright (C) 2012-2021 by László Nagy
    This file is part of Bear.

    Bear is a tool to generate compilation database for clang tooling.

    Bear is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Bear is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

// specific platform indicator, should not using like this. ()needs to be deprecated)
#cmakedefine SUPPORT_PRELOAD

// header checks
#cmakedefine HAVE_SPAWN_H
#cmakedefine HAVE_UNISTD_H
#cmakedefine HAVE_SPAWN_H
#cmakedefine HAVE_DLFCN_H
#cmakedefine HAVE_ERRNO_H
#cmakedefine HAVE_UNISTD_H
#cmakedefine HAVE_SYS_UTSNAME_H
#cmakedefine HAVE_SYS_WAIT_H
#cmakedefine HAVE_GNU_LIB_NAMES_H

// OSX specific (needs to be deprecated)
#cmakedefine HAVE_NSGETENVIRON

// dynamic linker
#cmakedefine HAVE_DLOPEN
#cmakedefine HAVE_DLSYM
#cmakedefine HAVE_DLERROR
#cmakedefine HAVE_DLCLOSE
#cmakedefine HAVE_RTLD_NEXT

// errno values
#cmakedefine HAVE_EACCES
#cmakedefine HAVE_ENOENT
#cmakedefine HAVE_UNAME

// string.h function
#cmakedefine HAVE_STRERROR_R

// unistd.h might declare the environ symbol
#cmakedefine HAVE_ENVIRON

// confstr and macros
#cmakedefine HAVE_CONFSTR
#cmakedefine HAVE_CS_PATH
#cmakedefine HAVE_CS_GNU_LIBC_VERSION
#cmakedefine HAVE_CS_GNU_LIBPTHREAD_VERSION

// macros to disable compiler generated methods
#define NON_DEFAULT_CONSTRUCTABLE(T) \
    T() noexcept = delete;

#define NON_COPYABLE_NOR_MOVABLE(T) \
    T(T const &) = delete; \
    T& operator=(T const &) = delete; \
    T(T &&) noexcept = delete; \
    T& operator=(T &&) noexcept = delete;

// const expression about this project
namespace cmd {
    constexpr char VERSION[] = "@CMAKE_PROJECT_VERSION@";

    namespace bear {

        constexpr char FLAG_CITNAMES[] = "--citnames";
        constexpr char FLAG_INTERCEPT[] = "--interceptor";
    }

    namespace citnames {
        constexpr char DEFAULT_PATH[] = "@ROOT_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@/citnames";

        constexpr char FLAG_INPUT[] = "--input";
        constexpr char FLAG_OUTPUT[] = "--output";
        constexpr char FLAG_APPEND[] = "--append";
        constexpr char FLAG_RUN_CHECKS[] = "--run-checks";
        constexpr char FLAG_CONFIG[] = "--config";

        constexpr char DEFAULT_OUTPUT[] = "compile_commands.json";
    }

    namespace intercept {
        constexpr char DEFAULT_PATH[] = "@ROOT_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@/intercept";

        constexpr char FLAG_OUTPUT[] = "--output";
        constexpr char FLAG_LIBRARY[] = "--library";
        constexpr char FLAG_WRAPPER[] = "--wrapper";
        constexpr char FLAG_WRAPPER_DIR[] = "--wrapper-dir";
        constexpr char FLAG_COMMAND[] = "--";
        constexpr char FLAG_FORCE_WRAPPER[] = "--force-wrapper";
        constexpr char FLAG_FORCE_PRELOAD[] = "--force-preload";

        constexpr char DEFAULT_OUTPUT[] = "events.db";
    }

    namespace wrapper {
        constexpr char DEFAULT_PATH[] = "@ROOT_INSTALL_PREFIX@/@PRIVATE_INSTALLDIR@/wrapper";
        constexpr char DEFAULT_DIR_PATH[] = "@ROOT_INSTALL_PREFIX@/@PRIVATE_INSTALLDIR@/wrapper.d";

        constexpr char FLAG_VERBOSE[] = "--verbose";
        constexpr char FLAG_DESTINATION[] = "--destination";
        constexpr char FLAG_EXECUTE[] = "--execute";
        constexpr char FLAG_COMMAND[] = "--";

        constexpr char KEY_DESTINATION[] = "INTERCEPT_REPORT_DESTINATION";
        constexpr char KEY_VERBOSE[] = "INTERCEPT_VERBOSE";
    }

    namespace library {
        constexpr char DEFAULT_PATH[] = "@ROOT_INSTALL_PREFIX@/@PRIVATE_INSTALLDIR@/@CMAKE_SHARED_LIBRARY_PREFIX@exec@CMAKE_SHARED_LIBRARY_SUFFIX@";

        constexpr char KEY_REPORTER[] = "INTERCEPT_REPORT_COMMAND";
        constexpr char KEY_DESTINATION[] = "INTERCEPT_REPORT_DESTINATION";
        constexpr char KEY_VERBOSE[] = "INTERCEPT_VERBOSE";
    }
}
